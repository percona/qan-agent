# WARN delay_key_write: MyISAM index blocks are never flushed until necessary.  If there is a server crash, data corruption on MyISAM tables can be much worse than usual.

# WARN innodb_log_file_size: The InnoDB log file size is set to its default value, which is not usable on production systems.

# NOTE log_warnings-2: Log_warnings must be set greater than 1 to log unusual events such as aborted connections.

# NOTE max_connect_errors: max_connect_errors should probably be set as large as your platform allows.

# NOTE port: The server is listening on a non-default port.

# WARN slave_net_timeout: This variable is set too high.  This is too long to wait before noticing that the connection to the master has failed and retrying.  This should probably be set to 60 seconds or less.  It is also a good idea to use pt-heartbeat to ensure that the connection does not appear to time out when the master is simply idle.

# WARN expire_logs_days: Binary logs are enabled, but automatic purging is not enabled.  If you do not purge binary logs, your disk will fill up.  If you delete binary logs externally to MySQL, you will cause unwanted behaviors. Always ask MySQL to purge obsolete logs, never delete them externally.

# NOTE innodb_data_file_path: Auto-extending InnoDB files can consume a lot of disk space that is very difficult to reclaim later.  Some people prefer to set innodb_file_per_table and allocate a fixed-size file for ibdata1.

# NOTE innodb_flush_method: Most production database servers that use InnoDB should set innodb_flush_method to O_DIRECT to avoid double-buffering, unless the I/O system is very low performance.

# WARN myisam_recover_options: myisam_recover_options should be set to some value such as BACKUP,FORCE to ensure that table corruption is noticed.

# WARN sync_binlog: Binary logging is enabled, but sync_binlog isn't configured so that every transaction is flushed to the binary log for durability.

